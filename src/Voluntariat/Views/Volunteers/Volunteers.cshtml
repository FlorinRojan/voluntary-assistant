@using Voluntariat.Framework.Identity
@using Voluntariat.Controllers

@model IEnumerable<Voluntariat.Models.Volunteer>

@{
    Identity identity = Context.GetIdentity();
}

<h1>Lista voluntari</h1>

<p>
    @if (identity != null && identity.Role == CustomIdentityRole.NGOAdmin)
    {
        <a asp-action="Create">Invita un voluntar</a>
    }
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VolunteerStatus)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VolunteerStatus)
                </td>
                <td>
                    @if (identity != null && identity.Role == CustomIdentityRole.NGOAdmin && item.VolunteerStatus == VolunteerStatus.PendingVerification)
                    {
                        <a asp-action="@nameof(VolunteersController.Verify)" asp-route-id="@item.ID">Verify</a> <span>|</span>
                        <a asp-action="@nameof(VolunteersController.Delete)" asp-route-id="@item.ID">Delete</a>
                    }

                    @if (identity != null && identity.Role == CustomIdentityRole.NGOAdmin && item.VolunteerStatus == VolunteerStatus.Verified)
                    {
                        <a asp-action="@nameof(VolunteersController.Delete)" asp-route-id="@item.ID">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
